<?xml version="1.0"?>
<doc>
    <assembly>
        <name>pelsoft.auth</name>
    </assembly>
    <members>
        <member name="M:pelsoft.auth.Controllers.KCRMController.auth(pelsoft.auth.models.KCRMLoginRequest)">
            <summary>
            Metodo solo para test.
            </summary>
            <returns></returns>
        </member>
        <member name="M:pelsoft.auth.Controllers.MicrosoftController.auth(pelsoft.auth.models.MicrosoftRequest)">
            <summary>
            Autenticacion Microsoft / solo con JWT
            </summary>
            <param name="login">Solicitud de login.</param>
            <returns></returns>
        </member>
        <member name="M:pelsoft.auth.Controllers.MicrosoftController.auth2(pelsoft.auth.models.MicrosoftRequest)">
            <summary>
            Autenticacion Microsoftt incluye Refreshtoken - En desarrollo
            </summary>
            <returns></returns>
        </member>
        <member name="M:pelsoft.auth.Controllers.MicrosoftController.Authenticate(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="securityProvider"></param>
            <returns></returns>
        </member>
        <member name="M:pelsoft.auth.Controllers.MicrosoftController.RefreshToken(System.String,System.String,System.String)">
            <summary>
             codigo agregado de anteriores mecanismo de refresh tk sin continuar
            </summary>
            <param name="refresh_token">refresh token</param>
            <param name="ipAddress">ipAddress </param>
            <param name="securityProvider"></param>
            <returns></returns>
        </member>
        <member name="M:pelsoft.auth.Controllers.AmazonController.auth(pelsoft.auth.Controllers.AmazonAuthReq)">
            <summary>
            Servicio de autenticación:
            1) Verifica contra un dominio (AD)
            2) Cheuqea el usuario contra la base de datos en meuucci
            </summary>
            <param name="req"></param>
            <returns>Retorna JWT</returns>
        </member>
        <member name="M:pelsoft.auth.Controllers.ToolsController.ping">
            <summary>
            Metodo solo para test.
            </summary>
            <returns></returns>        
        </member>
        <member name="T:pelsoft.auth.Controllers.AmazonAuthReq">
            <summary>
            Requets que permite autenticar el usuario contra 
            </summary>
        </member>
        <member name="P:pelsoft.auth.Controllers.AmazonAuthReq.username">
            <summary>
            Nimbre de usuario.
            Ejemplo : pramos, asilva, No es necesario anteponer el dominio
            </summary>
        </member>
        <member name="P:pelsoft.auth.Controllers.AmazonAuthReq.password">
            <summary>
            
            </summary>
        </member>
        <member name="P:pelsoft.auth.Controllers.AmazonAuthReq.domain">
            <summary>
            cualquier dominio de la compañía.
            Ejemplo: allus-ar, alcomovistar.com.ar
            </summary>
        </member>
        <member name="P:pelsoft.auth.Controllers.AmazonAuthReq.securityProviderName">
            <summary>
            proveedor de seguridad
            </summary>
        </member>
        <member name="M:pelsoft.auth.helpers.apiHelper.ToEpoch(System.DateTime)">
            <summary>
            Converts a DateTime to the long representation which is the number of seconds since the unix epoch.
            Epoch (UNIX Epoch time) : It is the number of seconds that have elapsed since 00:00:00 Thursday, 1 January 1970,[2] Coordinated Universal Time (UTC), minus leap seconds. 
            </summary>
            <param name="dateTime">A DateTime to convert to epoch time.</param>
            <returns>The long number of seconds since the unix epoch.</returns>
        </member>
        <member name="M:pelsoft.auth.helpers.apiHelper.FromEpoch(System.Int64)">
            <summary>
            Converts a long representation of time since the unix epoch to a DateTime.
            </summary>
            <param name="epoch">The number of seconds since Jan 1, 1970.
            Epoch (UNIX Epoch time) : It is the number of seconds that have elapsed since 00:00:00 Thursday, 1 January 1970,[2] Coordinated Universal Time (UTC), minus leap seconds. </param>
            <returns>A DateTime representing the time since the epoch.</returns>
        </member>
        <member name="T:pelsoft.auth.helpers.TokenGenerator">
            <summary>
            
            </summary>
        </member>
        <member name="M:pelsoft.auth.helpers.TokenGenerator.GenerateToken(Fwk.Security.Identity.SecurityUserBE,System.String)">
            <summary>
            
            </summary>
            <param name="secUser"></param>
            <param name="securityProvider"></param>
            <returns></returns>
        </member>
        <member name="M:pelsoft.auth.helpers.TokenGenerator.GenerateToken(pelsoft.auth.be.EmpleadoBE,System.String)">
            <summary>
            
            </summary>
            <param name="empleado"></param>
            <param name="securityProvider"></param>
            <returns></returns>
        </member>
        <member name="T:pelsoft.auth.models.KCRMLoginRequest">
            <summary>
            DTO Auth  KCRM
            </summary>
        </member>
        <member name="T:pelsoft.auth.models.CommonLoginResult">
            <summary>
            Standar jwt auth result
            </summary>
        </member>
        <member name="T:pelsoft.auth.models.KCRMLoginResult">
            <summary>
            kcrm auth result
            </summary>
        </member>
    </members>
</doc>
